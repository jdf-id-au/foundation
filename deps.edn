{:paths ["src" "resources"]
 :deps {org.clojure/clojure {:mvn/version "1.10.1"}
        tick {:git/url "https://github.com/juxt/tick.git"
              :sha "1e14333e3ce142dd3eebb0cca9449a980a924f1e"}

        org.clojure/tools.cli {:mvn/version "1.0.194"}
        org.clojure/data.json {:mvn/version "0.2.6"}
        org.clojure/test.check {:mvn/version "0.10.0"}

        ; yada uses clojure.xml which causes reflection warning on java11
        ; https://github.com/juxt/yada/issues/305#issuecomment-615994934
        yada/lean {:mvn/version "1.2.15"}

        ; aleph causes error on java11, work around until yada deps updated
        ; https://github.com/juxt/edge/issues/26#issuecomment-394953143
        ; https://github.com/ztellman/aleph/issues/383#issuecomment-386233881
        javax.xml.bind/jaxb-api {:mvn/version "2.3.0"}

        org.clojure/clojurescript
        {:git/url "https://github.com/clojure/clojurescript.git"
         :sha "e66131422cbd67c4a594e194f09b49f2c3ae3d2e"}
        binaryage/oops {:mvn/version "0.7.0"}
        datascript {:mvn/version "0.18.11"}
        lilactown/helix {:git/url "https://github.com/Lokeh/helix.git"
                         :sha "ae8fc35d855f8be98d158d9d85409e0f187c97bc"}
        bidi {:mvn/version "2.1.6"}
        ; brings in transit
        cljs-ajax {:mvn/version "0.8.0"}}

 :aliases
 {:test {:extra-paths ["dev" "test"]
         :extra-deps {thheller/shadow-cljs {:mvn/version "2.8.83"}
                      binaryage/devtools {:mvn/version "0.9.11"}}}}}

; TODO contemplate having three projects in one repo:
; foundation-common, foundation-client and foundation-server
; and have deps on client or server as appropriate, both of which would require common
; - might make for smaller artifacts?
; - not sure how intellij would like it (wrt repo management)
; https://clojureverse.org/t/how-to-effectively-use-deps-cli/4787/14
; or could just use appropriate :exclusions at each dep?